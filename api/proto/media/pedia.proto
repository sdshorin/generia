
syntax = "proto3";

package media;

option go_package = "instagram-clone/api/proto/media";

// MediaService предоставляет API для управления медиафайлами
service MediaService {
  // Загрузка медиафайла
  rpc UploadMedia(stream UploadMediaRequest) returns (UploadMediaResponse);
  
  // Получение информации о медиафайле
  rpc GetMedia(GetMediaRequest) returns (Media);
  
  // Получение URL для доступа к медиафайлу
  rpc GetMediaURL(GetMediaURLRequest) returns (GetMediaURLResponse);

  // Оптимизация изображения
  rpc OptimizeImage(OptimizeImageRequest) returns (OptimizeImageResponse);

  // Проверка здоровья сервиса
  rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse);
}

message UploadMediaRequest {
  oneof data {
    MediaMetadata metadata = 1;
    bytes chunk = 2;
  }
}

message MediaMetadata {
  string user_id = 1;
  string filename = 2;
  string content_type = 3;
  int64 size = 4;
}

message UploadMediaResponse {
  string media_id = 1;
  repeated MediaVariant variants = 2; // URLs для различных размеров
}

message MediaVariant {
  string name = 1; // original, thumbnail, medium
  string url = 2;
  int32 width = 3;
  int32 height = 4;
}

message GetMediaRequest {
  string media_id = 1;
}

message Media {
  string media_id = 1;
  string user_id = 2;
  string filename = 3;
  string content_type = 4;
  int64 size = 5;
  repeated MediaVariant variants = 6;
  string created_at = 7; // ISO 8601 format
}

message GetMediaURLRequest {
  string media_id = 1;
  string variant = 2; // original, thumbnail, medium
  int64 expires_in = 3; // Время жизни URL в секундах
}

message GetMediaURLResponse {
  string url = 1;
  int64 expires_at = 2; // Unix timestamp
}

message OptimizeImageRequest {
  string media_id = 1;
  repeated string variants_to_create = 2; // thumbnail, medium, etc.
}

message OptimizeImageResponse {
  repeated MediaVariant variants = 1;
}

message HealthCheckRequest {
  // Пустой запрос
}

message HealthCheckResponse {
  enum Status {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
  }
  Status status = 1;
}
