// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: media/pedia.proto

package media

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_Status int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_Status = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_Status = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_Status = 2
)

// Enum value maps for HealthCheckResponse_Status.
var (
	HealthCheckResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_Status_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_Status) Enum() *HealthCheckResponse_Status {
	p := new(HealthCheckResponse_Status)
	*p = x
	return p
}

func (x HealthCheckResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_media_pedia_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_Status) Type() protoreflect.EnumType {
	return &file_media_pedia_proto_enumTypes[0]
}

func (x HealthCheckResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_Status.Descriptor instead.
func (HealthCheckResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{11, 0}
}

type UploadMediaRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Data:
	//
	//	*UploadMediaRequest_Metadata
	//	*UploadMediaRequest_Chunk
	Data          isUploadMediaRequest_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadMediaRequest) Reset() {
	*x = UploadMediaRequest{}
	mi := &file_media_pedia_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaRequest) ProtoMessage() {}

func (x *UploadMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMediaRequest.ProtoReflect.Descriptor instead.
func (*UploadMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{0}
}

func (x *UploadMediaRequest) GetData() isUploadMediaRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadMediaRequest) GetMetadata() *MediaMetadata {
	if x != nil {
		if x, ok := x.Data.(*UploadMediaRequest_Metadata); ok {
			return x.Metadata
		}
	}
	return nil
}

func (x *UploadMediaRequest) GetChunk() []byte {
	if x != nil {
		if x, ok := x.Data.(*UploadMediaRequest_Chunk); ok {
			return x.Chunk
		}
	}
	return nil
}

type isUploadMediaRequest_Data interface {
	isUploadMediaRequest_Data()
}

type UploadMediaRequest_Metadata struct {
	Metadata *MediaMetadata `protobuf:"bytes,1,opt,name=metadata,proto3,oneof"`
}

type UploadMediaRequest_Chunk struct {
	Chunk []byte `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

func (*UploadMediaRequest_Metadata) isUploadMediaRequest_Data() {}

func (*UploadMediaRequest_Chunk) isUploadMediaRequest_Data() {}

type MediaMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Filename      string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,3,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaMetadata) Reset() {
	*x = MediaMetadata{}
	mi := &file_media_pedia_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaMetadata) ProtoMessage() {}

func (x *MediaMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaMetadata.ProtoReflect.Descriptor instead.
func (*MediaMetadata) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{1}
}

func (x *MediaMetadata) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MediaMetadata) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MediaMetadata) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *MediaMetadata) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type UploadMediaResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	Variants      []*MediaVariant        `protobuf:"bytes,2,rep,name=variants,proto3" json:"variants,omitempty"` // URLs для различных размеров
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadMediaResponse) Reset() {
	*x = UploadMediaResponse{}
	mi := &file_media_pedia_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadMediaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadMediaResponse) ProtoMessage() {}

func (x *UploadMediaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadMediaResponse.ProtoReflect.Descriptor instead.
func (*UploadMediaResponse) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{2}
}

func (x *UploadMediaResponse) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *UploadMediaResponse) GetVariants() []*MediaVariant {
	if x != nil {
		return x.Variants
	}
	return nil
}

type MediaVariant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // original, thumbnail, medium
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Width         int32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaVariant) Reset() {
	*x = MediaVariant{}
	mi := &file_media_pedia_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaVariant) ProtoMessage() {}

func (x *MediaVariant) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaVariant.ProtoReflect.Descriptor instead.
func (*MediaVariant) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{3}
}

func (x *MediaVariant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MediaVariant) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MediaVariant) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MediaVariant) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaRequest) Reset() {
	*x = GetMediaRequest{}
	mi := &file_media_pedia_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaRequest) ProtoMessage() {}

func (x *GetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaRequest.ProtoReflect.Descriptor instead.
func (*GetMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{4}
}

func (x *GetMediaRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type Media struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	UserId        string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Variants      []*MediaVariant        `protobuf:"bytes,6,rep,name=variants,proto3" json:"variants,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // ISO 8601 format
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Media) Reset() {
	*x = Media{}
	mi := &file_media_pedia_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{5}
}

func (x *Media) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *Media) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Media) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Media) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Media) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Media) GetVariants() []*MediaVariant {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *Media) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type GetMediaURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	Variant       string                 `protobuf:"bytes,2,opt,name=variant,proto3" json:"variant,omitempty"`                       // original, thumbnail, medium
	ExpiresIn     int64                  `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"` // Время жизни URL в секундах
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaURLRequest) Reset() {
	*x = GetMediaURLRequest{}
	mi := &file_media_pedia_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaURLRequest) ProtoMessage() {}

func (x *GetMediaURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaURLRequest.ProtoReflect.Descriptor instead.
func (*GetMediaURLRequest) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{6}
}

func (x *GetMediaURLRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *GetMediaURLRequest) GetVariant() string {
	if x != nil {
		return x.Variant
	}
	return ""
}

func (x *GetMediaURLRequest) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type GetMediaURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaURLResponse) Reset() {
	*x = GetMediaURLResponse{}
	mi := &file_media_pedia_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaURLResponse) ProtoMessage() {}

func (x *GetMediaURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaURLResponse.ProtoReflect.Descriptor instead.
func (*GetMediaURLResponse) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{7}
}

func (x *GetMediaURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetMediaURLResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type OptimizeImageRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MediaId          string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	VariantsToCreate []string               `protobuf:"bytes,2,rep,name=variants_to_create,json=variantsToCreate,proto3" json:"variants_to_create,omitempty"` // thumbnail, medium, etc.
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OptimizeImageRequest) Reset() {
	*x = OptimizeImageRequest{}
	mi := &file_media_pedia_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptimizeImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimizeImageRequest) ProtoMessage() {}

func (x *OptimizeImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimizeImageRequest.ProtoReflect.Descriptor instead.
func (*OptimizeImageRequest) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{8}
}

func (x *OptimizeImageRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *OptimizeImageRequest) GetVariantsToCreate() []string {
	if x != nil {
		return x.VariantsToCreate
	}
	return nil
}

type OptimizeImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Variants      []*MediaVariant        `protobuf:"bytes,1,rep,name=variants,proto3" json:"variants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OptimizeImageResponse) Reset() {
	*x = OptimizeImageResponse{}
	mi := &file_media_pedia_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptimizeImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimizeImageResponse) ProtoMessage() {}

func (x *OptimizeImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimizeImageResponse.ProtoReflect.Descriptor instead.
func (*OptimizeImageResponse) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{9}
}

func (x *OptimizeImageResponse) GetVariants() []*MediaVariant {
	if x != nil {
		return x.Variants
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_media_pedia_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{10}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Status        HealthCheckResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=media.HealthCheckResponse_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_media_pedia_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_pedia_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_media_pedia_proto_rawDescGZIP(), []int{11}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_Status {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

var File_media_pedia_proto protoreflect.FileDescriptor

const file_media_pedia_proto_rawDesc = "" +
	"\n" +
	"\x11media/pedia.proto\x12\x05media\"h\n" +
	"\x12UploadMediaRequest\x122\n" +
	"\bmetadata\x18\x01 \x01(\v2\x14.media.MediaMetadataH\x00R\bmetadata\x12\x16\n" +
	"\x05chunk\x18\x02 \x01(\fH\x00R\x05chunkB\x06\n" +
	"\x04data\"{\n" +
	"\rMediaMetadata\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x03 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\"a\n" +
	"\x13UploadMediaResponse\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\x12/\n" +
	"\bvariants\x18\x02 \x03(\v2\x13.media.MediaVariantR\bvariants\"b\n" +
	"\fMediaVariant\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x05R\x06height\",\n" +
	"\x0fGetMediaRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\"\xde\x01\n" +
	"\x05Media\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\x12/\n" +
	"\bvariants\x18\x06 \x03(\v2\x13.media.MediaVariantR\bvariants\x12\x1d\n" +
	"\n" +
	"created_at\x18\a \x01(\tR\tcreatedAt\"h\n" +
	"\x12GetMediaURLRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\x12\x18\n" +
	"\avariant\x18\x02 \x01(\tR\avariant\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x03 \x01(\x03R\texpiresIn\"F\n" +
	"\x13GetMediaURLResponse\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt\"_\n" +
	"\x14OptimizeImageRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\x12,\n" +
	"\x12variants_to_create\x18\x02 \x03(\tR\x10variantsToCreate\"H\n" +
	"\x15OptimizeImageResponse\x12/\n" +
	"\bvariants\x18\x01 \x03(\v2\x13.media.MediaVariantR\bvariants\"\x14\n" +
	"\x12HealthCheckRequest\"\x85\x01\n" +
	"\x13HealthCheckResponse\x129\n" +
	"\x06status\x18\x01 \x01(\x0e2!.media.HealthCheckResponse.StatusR\x06status\"3\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x022\xe0\x02\n" +
	"\fMediaService\x12F\n" +
	"\vUploadMedia\x12\x19.media.UploadMediaRequest\x1a\x1a.media.UploadMediaResponse(\x01\x120\n" +
	"\bGetMedia\x12\x16.media.GetMediaRequest\x1a\f.media.Media\x12D\n" +
	"\vGetMediaURL\x12\x19.media.GetMediaURLRequest\x1a\x1a.media.GetMediaURLResponse\x12J\n" +
	"\rOptimizeImage\x12\x1b.media.OptimizeImageRequest\x1a\x1c.media.OptimizeImageResponse\x12D\n" +
	"\vHealthCheck\x12\x19.media.HealthCheckRequest\x1a\x1a.media.HealthCheckResponseB!Z\x1finstagram-clone/api/proto/mediab\x06proto3"

var (
	file_media_pedia_proto_rawDescOnce sync.Once
	file_media_pedia_proto_rawDescData []byte
)

func file_media_pedia_proto_rawDescGZIP() []byte {
	file_media_pedia_proto_rawDescOnce.Do(func() {
		file_media_pedia_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_media_pedia_proto_rawDesc), len(file_media_pedia_proto_rawDesc)))
	})
	return file_media_pedia_proto_rawDescData
}

var file_media_pedia_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_media_pedia_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_media_pedia_proto_goTypes = []any{
	(HealthCheckResponse_Status)(0), // 0: media.HealthCheckResponse.Status
	(*UploadMediaRequest)(nil),      // 1: media.UploadMediaRequest
	(*MediaMetadata)(nil),           // 2: media.MediaMetadata
	(*UploadMediaResponse)(nil),     // 3: media.UploadMediaResponse
	(*MediaVariant)(nil),            // 4: media.MediaVariant
	(*GetMediaRequest)(nil),         // 5: media.GetMediaRequest
	(*Media)(nil),                   // 6: media.Media
	(*GetMediaURLRequest)(nil),      // 7: media.GetMediaURLRequest
	(*GetMediaURLResponse)(nil),     // 8: media.GetMediaURLResponse
	(*OptimizeImageRequest)(nil),    // 9: media.OptimizeImageRequest
	(*OptimizeImageResponse)(nil),   // 10: media.OptimizeImageResponse
	(*HealthCheckRequest)(nil),      // 11: media.HealthCheckRequest
	(*HealthCheckResponse)(nil),     // 12: media.HealthCheckResponse
}
var file_media_pedia_proto_depIdxs = []int32{
	2,  // 0: media.UploadMediaRequest.metadata:type_name -> media.MediaMetadata
	4,  // 1: media.UploadMediaResponse.variants:type_name -> media.MediaVariant
	4,  // 2: media.Media.variants:type_name -> media.MediaVariant
	4,  // 3: media.OptimizeImageResponse.variants:type_name -> media.MediaVariant
	0,  // 4: media.HealthCheckResponse.status:type_name -> media.HealthCheckResponse.Status
	1,  // 5: media.MediaService.UploadMedia:input_type -> media.UploadMediaRequest
	5,  // 6: media.MediaService.GetMedia:input_type -> media.GetMediaRequest
	7,  // 7: media.MediaService.GetMediaURL:input_type -> media.GetMediaURLRequest
	9,  // 8: media.MediaService.OptimizeImage:input_type -> media.OptimizeImageRequest
	11, // 9: media.MediaService.HealthCheck:input_type -> media.HealthCheckRequest
	3,  // 10: media.MediaService.UploadMedia:output_type -> media.UploadMediaResponse
	6,  // 11: media.MediaService.GetMedia:output_type -> media.Media
	8,  // 12: media.MediaService.GetMediaURL:output_type -> media.GetMediaURLResponse
	10, // 13: media.MediaService.OptimizeImage:output_type -> media.OptimizeImageResponse
	12, // 14: media.MediaService.HealthCheck:output_type -> media.HealthCheckResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_media_pedia_proto_init() }
func file_media_pedia_proto_init() {
	if File_media_pedia_proto != nil {
		return
	}
	file_media_pedia_proto_msgTypes[0].OneofWrappers = []any{
		(*UploadMediaRequest_Metadata)(nil),
		(*UploadMediaRequest_Chunk)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_media_pedia_proto_rawDesc), len(file_media_pedia_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_media_pedia_proto_goTypes,
		DependencyIndexes: file_media_pedia_proto_depIdxs,
		EnumInfos:         file_media_pedia_proto_enumTypes,
		MessageInfos:      file_media_pedia_proto_msgTypes,
	}.Build()
	File_media_pedia_proto = out.File
	file_media_pedia_proto_goTypes = nil
	file_media_pedia_proto_depIdxs = nil
}
