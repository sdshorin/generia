// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: media/media.proto

package media

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for media types to determine storage path structure
type MediaType int32

const (
	MediaType_MEDIA_TYPE_UNKNOWN          MediaType = 0
	MediaType_MEDIA_TYPE_WORLD_HEADER     MediaType = 1 // world_id/world_data/header.png
	MediaType_MEDIA_TYPE_WORLD_ICON       MediaType = 2 // world_id/world_data/icon.png
	MediaType_MEDIA_TYPE_CHARACTER_AVATAR MediaType = 3 // world_id/character_id/avatars/avatar.png
	MediaType_MEDIA_TYPE_POST_IMAGE       MediaType = 4 // world_id/character_id/posts/post.png
)

// Enum value maps for MediaType.
var (
	MediaType_name = map[int32]string{
		0: "MEDIA_TYPE_UNKNOWN",
		1: "MEDIA_TYPE_WORLD_HEADER",
		2: "MEDIA_TYPE_WORLD_ICON",
		3: "MEDIA_TYPE_CHARACTER_AVATAR",
		4: "MEDIA_TYPE_POST_IMAGE",
	}
	MediaType_value = map[string]int32{
		"MEDIA_TYPE_UNKNOWN":          0,
		"MEDIA_TYPE_WORLD_HEADER":     1,
		"MEDIA_TYPE_WORLD_ICON":       2,
		"MEDIA_TYPE_CHARACTER_AVATAR": 3,
		"MEDIA_TYPE_POST_IMAGE":       4,
	}
)

func (x MediaType) Enum() *MediaType {
	p := new(MediaType)
	*p = x
	return p
}

func (x MediaType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaType) Descriptor() protoreflect.EnumDescriptor {
	return file_media_media_proto_enumTypes[0].Descriptor()
}

func (MediaType) Type() protoreflect.EnumType {
	return &file_media_media_proto_enumTypes[0]
}

func (x MediaType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaType.Descriptor instead.
func (MediaType) EnumDescriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{0}
}

type HealthCheckResponse_Status int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_Status = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_Status = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_Status = 2
)

// Enum value maps for HealthCheckResponse_Status.
var (
	HealthCheckResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_Status_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_Status) Enum() *HealthCheckResponse_Status {
	p := new(HealthCheckResponse_Status)
	*p = x
	return p
}

func (x HealthCheckResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_media_media_proto_enumTypes[1].Descriptor()
}

func (HealthCheckResponse_Status) Type() protoreflect.EnumType {
	return &file_media_media_proto_enumTypes[1]
}

func (x HealthCheckResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_Status.Descriptor instead.
func (HealthCheckResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{13, 0}
}

type MediaMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CharacterId   string                 `protobuf:"bytes,1,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"`
	WorldId       string                 `protobuf:"bytes,2,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaMetadata) Reset() {
	*x = MediaMetadata{}
	mi := &file_media_media_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaMetadata) ProtoMessage() {}

func (x *MediaMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaMetadata.ProtoReflect.Descriptor instead.
func (*MediaMetadata) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{0}
}

func (x *MediaMetadata) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *MediaMetadata) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *MediaMetadata) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MediaMetadata) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *MediaMetadata) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type MediaVariant struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // original, thumbnail, medium
	Url           string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Width         int32                  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height        int32                  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaVariant) Reset() {
	*x = MediaVariant{}
	mi := &file_media_media_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaVariant) ProtoMessage() {}

func (x *MediaVariant) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaVariant.ProtoReflect.Descriptor instead.
func (*MediaVariant) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{1}
}

func (x *MediaVariant) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MediaVariant) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MediaVariant) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *MediaVariant) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetMediaRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaRequest) Reset() {
	*x = GetMediaRequest{}
	mi := &file_media_media_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaRequest) ProtoMessage() {}

func (x *GetMediaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaRequest.ProtoReflect.Descriptor instead.
func (*GetMediaRequest) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{2}
}

func (x *GetMediaRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type Media struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	CharacterId   string                 `protobuf:"bytes,2,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"` // Optional for world-level media
	WorldId       string                 `protobuf:"bytes,3,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	Filename      string                 `protobuf:"bytes,4,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,5,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Size          int64                  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	Variants      []*MediaVariant        `protobuf:"bytes,7,rep,name=variants,proto3" json:"variants,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"` // ISO 8601 format
	MediaType     MediaType              `protobuf:"varint,9,opt,name=media_type,json=mediaType,proto3,enum=media.MediaType" json:"media_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Media) Reset() {
	*x = Media{}
	mi := &file_media_media_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Media) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Media) ProtoMessage() {}

func (x *Media) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Media.ProtoReflect.Descriptor instead.
func (*Media) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{3}
}

func (x *Media) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *Media) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *Media) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *Media) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *Media) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *Media) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Media) GetVariants() []*MediaVariant {
	if x != nil {
		return x.Variants
	}
	return nil
}

func (x *Media) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Media) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MEDIA_TYPE_UNKNOWN
}

type GetMediaURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	Variant       string                 `protobuf:"bytes,2,opt,name=variant,proto3" json:"variant,omitempty"`                       // original, thumbnail, medium
	ExpiresIn     int64                  `protobuf:"varint,3,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"` // Время жизни URL в секундах
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaURLRequest) Reset() {
	*x = GetMediaURLRequest{}
	mi := &file_media_media_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaURLRequest) ProtoMessage() {}

func (x *GetMediaURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaURLRequest.ProtoReflect.Descriptor instead.
func (*GetMediaURLRequest) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{4}
}

func (x *GetMediaURLRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *GetMediaURLRequest) GetVariant() string {
	if x != nil {
		return x.Variant
	}
	return ""
}

func (x *GetMediaURLRequest) GetExpiresIn() int64 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type GetMediaURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMediaURLResponse) Reset() {
	*x = GetMediaURLResponse{}
	mi := &file_media_media_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMediaURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMediaURLResponse) ProtoMessage() {}

func (x *GetMediaURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMediaURLResponse.ProtoReflect.Descriptor instead.
func (*GetMediaURLResponse) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{5}
}

func (x *GetMediaURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetMediaURLResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type OptimizeImageRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	MediaId          string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	VariantsToCreate []string               `protobuf:"bytes,2,rep,name=variants_to_create,json=variantsToCreate,proto3" json:"variants_to_create,omitempty"` // thumbnail, medium, etc.
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OptimizeImageRequest) Reset() {
	*x = OptimizeImageRequest{}
	mi := &file_media_media_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptimizeImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimizeImageRequest) ProtoMessage() {}

func (x *OptimizeImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimizeImageRequest.ProtoReflect.Descriptor instead.
func (*OptimizeImageRequest) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{6}
}

func (x *OptimizeImageRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *OptimizeImageRequest) GetVariantsToCreate() []string {
	if x != nil {
		return x.VariantsToCreate
	}
	return nil
}

type OptimizeImageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Variants      []*MediaVariant        `protobuf:"bytes,1,rep,name=variants,proto3" json:"variants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OptimizeImageResponse) Reset() {
	*x = OptimizeImageResponse{}
	mi := &file_media_media_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OptimizeImageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptimizeImageResponse) ProtoMessage() {}

func (x *OptimizeImageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptimizeImageResponse.ProtoReflect.Descriptor instead.
func (*OptimizeImageResponse) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{7}
}

func (x *OptimizeImageResponse) GetVariants() []*MediaVariant {
	if x != nil {
		return x.Variants
	}
	return nil
}

type GetPresignedUploadURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	WorldId       string                 `protobuf:"bytes,1,opt,name=world_id,json=worldId,proto3" json:"world_id,omitempty"`
	CharacterId   string                 `protobuf:"bytes,2,opt,name=character_id,json=characterId,proto3" json:"character_id,omitempty"` // Optional for world-level media
	Filename      string                 `protobuf:"bytes,3,opt,name=filename,proto3" json:"filename,omitempty"`
	ContentType   string                 `protobuf:"bytes,4,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	MediaType     MediaType              `protobuf:"varint,6,opt,name=media_type,json=mediaType,proto3,enum=media.MediaType" json:"media_type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPresignedUploadURLRequest) Reset() {
	*x = GetPresignedUploadURLRequest{}
	mi := &file_media_media_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPresignedUploadURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPresignedUploadURLRequest) ProtoMessage() {}

func (x *GetPresignedUploadURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPresignedUploadURLRequest.ProtoReflect.Descriptor instead.
func (*GetPresignedUploadURLRequest) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{8}
}

func (x *GetPresignedUploadURLRequest) GetWorldId() string {
	if x != nil {
		return x.WorldId
	}
	return ""
}

func (x *GetPresignedUploadURLRequest) GetCharacterId() string {
	if x != nil {
		return x.CharacterId
	}
	return ""
}

func (x *GetPresignedUploadURLRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GetPresignedUploadURLRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *GetPresignedUploadURLRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetPresignedUploadURLRequest) GetMediaType() MediaType {
	if x != nil {
		return x.MediaType
	}
	return MediaType_MEDIA_TYPE_UNKNOWN
}

type GetPresignedUploadURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	UploadUrl     string                 `protobuf:"bytes,2,opt,name=upload_url,json=uploadUrl,proto3" json:"upload_url,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPresignedUploadURLResponse) Reset() {
	*x = GetPresignedUploadURLResponse{}
	mi := &file_media_media_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPresignedUploadURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPresignedUploadURLResponse) ProtoMessage() {}

func (x *GetPresignedUploadURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPresignedUploadURLResponse.ProtoReflect.Descriptor instead.
func (*GetPresignedUploadURLResponse) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{9}
}

func (x *GetPresignedUploadURLResponse) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

func (x *GetPresignedUploadURLResponse) GetUploadUrl() string {
	if x != nil {
		return x.UploadUrl
	}
	return ""
}

func (x *GetPresignedUploadURLResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type ConfirmUploadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MediaId       string                 `protobuf:"bytes,1,opt,name=media_id,json=mediaId,proto3" json:"media_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmUploadRequest) Reset() {
	*x = ConfirmUploadRequest{}
	mi := &file_media_media_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmUploadRequest) ProtoMessage() {}

func (x *ConfirmUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmUploadRequest.ProtoReflect.Descriptor instead.
func (*ConfirmUploadRequest) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{10}
}

func (x *ConfirmUploadRequest) GetMediaId() string {
	if x != nil {
		return x.MediaId
	}
	return ""
}

type ConfirmUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Variants      []*MediaVariant        `protobuf:"bytes,2,rep,name=variants,proto3" json:"variants,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmUploadResponse) Reset() {
	*x = ConfirmUploadResponse{}
	mi := &file_media_media_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmUploadResponse) ProtoMessage() {}

func (x *ConfirmUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmUploadResponse.ProtoReflect.Descriptor instead.
func (*ConfirmUploadResponse) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{11}
}

func (x *ConfirmUploadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ConfirmUploadResponse) GetVariants() []*MediaVariant {
	if x != nil {
		return x.Variants
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_media_media_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{12}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Status        HealthCheckResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=media.HealthCheckResponse_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_media_media_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_media_media_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_media_media_proto_rawDescGZIP(), []int{13}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_Status {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

var File_media_media_proto protoreflect.FileDescriptor

const file_media_media_proto_rawDesc = "" +
	"\n" +
	"\x11media/media.proto\x12\x05media\"\xa0\x01\n" +
	"\rMediaMetadata\x12!\n" +
	"\fcharacter_id\x18\x01 \x01(\tR\vcharacterId\x12\x19\n" +
	"\bworld_id\x18\x02 \x01(\tR\aworldId\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\"b\n" +
	"\fMediaVariant\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x10\n" +
	"\x03url\x18\x02 \x01(\tR\x03url\x12\x14\n" +
	"\x05width\x18\x03 \x01(\x05R\x05width\x12\x16\n" +
	"\x06height\x18\x04 \x01(\x05R\x06height\",\n" +
	"\x0fGetMediaRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\"\xb4\x02\n" +
	"\x05Media\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\x12!\n" +
	"\fcharacter_id\x18\x02 \x01(\tR\vcharacterId\x12\x19\n" +
	"\bworld_id\x18\x03 \x01(\tR\aworldId\x12\x1a\n" +
	"\bfilename\x18\x04 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x05 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x03R\x04size\x12/\n" +
	"\bvariants\x18\a \x03(\v2\x13.media.MediaVariantR\bvariants\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12/\n" +
	"\n" +
	"media_type\x18\t \x01(\x0e2\x10.media.MediaTypeR\tmediaType\"h\n" +
	"\x12GetMediaURLRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\x12\x18\n" +
	"\avariant\x18\x02 \x01(\tR\avariant\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x03 \x01(\x03R\texpiresIn\"F\n" +
	"\x13GetMediaURLResponse\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt\"_\n" +
	"\x14OptimizeImageRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\x12,\n" +
	"\x12variants_to_create\x18\x02 \x03(\tR\x10variantsToCreate\"H\n" +
	"\x15OptimizeImageResponse\x12/\n" +
	"\bvariants\x18\x01 \x03(\v2\x13.media.MediaVariantR\bvariants\"\xe0\x01\n" +
	"\x1cGetPresignedUploadURLRequest\x12\x19\n" +
	"\bworld_id\x18\x01 \x01(\tR\aworldId\x12!\n" +
	"\fcharacter_id\x18\x02 \x01(\tR\vcharacterId\x12\x1a\n" +
	"\bfilename\x18\x03 \x01(\tR\bfilename\x12!\n" +
	"\fcontent_type\x18\x04 \x01(\tR\vcontentType\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\x12/\n" +
	"\n" +
	"media_type\x18\x06 \x01(\x0e2\x10.media.MediaTypeR\tmediaType\"x\n" +
	"\x1dGetPresignedUploadURLResponse\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\x12\x1d\n" +
	"\n" +
	"upload_url\x18\x02 \x01(\tR\tuploadUrl\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x03 \x01(\x03R\texpiresAt\"1\n" +
	"\x14ConfirmUploadRequest\x12\x19\n" +
	"\bmedia_id\x18\x01 \x01(\tR\amediaId\"b\n" +
	"\x15ConfirmUploadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12/\n" +
	"\bvariants\x18\x02 \x03(\v2\x13.media.MediaVariantR\bvariants\"\x14\n" +
	"\x12HealthCheckRequest\"\x85\x01\n" +
	"\x13HealthCheckResponse\x129\n" +
	"\x06status\x18\x01 \x01(\x0e2!.media.HealthCheckResponse.StatusR\x06status\"3\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x02*\x97\x01\n" +
	"\tMediaType\x12\x16\n" +
	"\x12MEDIA_TYPE_UNKNOWN\x10\x00\x12\x1b\n" +
	"\x17MEDIA_TYPE_WORLD_HEADER\x10\x01\x12\x19\n" +
	"\x15MEDIA_TYPE_WORLD_ICON\x10\x02\x12\x1f\n" +
	"\x1bMEDIA_TYPE_CHARACTER_AVATAR\x10\x03\x12\x19\n" +
	"\x15MEDIA_TYPE_POST_IMAGE\x10\x042\xc8\x03\n" +
	"\fMediaService\x12b\n" +
	"\x15GetPresignedUploadURL\x12#.media.GetPresignedUploadURLRequest\x1a$.media.GetPresignedUploadURLResponse\x12J\n" +
	"\rConfirmUpload\x12\x1b.media.ConfirmUploadRequest\x1a\x1c.media.ConfirmUploadResponse\x120\n" +
	"\bGetMedia\x12\x16.media.GetMediaRequest\x1a\f.media.Media\x12D\n" +
	"\vGetMediaURL\x12\x19.media.GetMediaURLRequest\x1a\x1a.media.GetMediaURLResponse\x12J\n" +
	"\rOptimizeImage\x12\x1b.media.OptimizeImageRequest\x1a\x1c.media.OptimizeImageResponse\x12D\n" +
	"\vHealthCheck\x12\x19.media.HealthCheckRequest\x1a\x1a.media.HealthCheckResponseB-Z+github.com/sdshorin/generia/api/proto/mediab\x06proto3"

var (
	file_media_media_proto_rawDescOnce sync.Once
	file_media_media_proto_rawDescData []byte
)

func file_media_media_proto_rawDescGZIP() []byte {
	file_media_media_proto_rawDescOnce.Do(func() {
		file_media_media_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_media_media_proto_rawDesc), len(file_media_media_proto_rawDesc)))
	})
	return file_media_media_proto_rawDescData
}

var file_media_media_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_media_media_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_media_media_proto_goTypes = []any{
	(MediaType)(0),                        // 0: media.MediaType
	(HealthCheckResponse_Status)(0),       // 1: media.HealthCheckResponse.Status
	(*MediaMetadata)(nil),                 // 2: media.MediaMetadata
	(*MediaVariant)(nil),                  // 3: media.MediaVariant
	(*GetMediaRequest)(nil),               // 4: media.GetMediaRequest
	(*Media)(nil),                         // 5: media.Media
	(*GetMediaURLRequest)(nil),            // 6: media.GetMediaURLRequest
	(*GetMediaURLResponse)(nil),           // 7: media.GetMediaURLResponse
	(*OptimizeImageRequest)(nil),          // 8: media.OptimizeImageRequest
	(*OptimizeImageResponse)(nil),         // 9: media.OptimizeImageResponse
	(*GetPresignedUploadURLRequest)(nil),  // 10: media.GetPresignedUploadURLRequest
	(*GetPresignedUploadURLResponse)(nil), // 11: media.GetPresignedUploadURLResponse
	(*ConfirmUploadRequest)(nil),          // 12: media.ConfirmUploadRequest
	(*ConfirmUploadResponse)(nil),         // 13: media.ConfirmUploadResponse
	(*HealthCheckRequest)(nil),            // 14: media.HealthCheckRequest
	(*HealthCheckResponse)(nil),           // 15: media.HealthCheckResponse
}
var file_media_media_proto_depIdxs = []int32{
	3,  // 0: media.Media.variants:type_name -> media.MediaVariant
	0,  // 1: media.Media.media_type:type_name -> media.MediaType
	3,  // 2: media.OptimizeImageResponse.variants:type_name -> media.MediaVariant
	0,  // 3: media.GetPresignedUploadURLRequest.media_type:type_name -> media.MediaType
	3,  // 4: media.ConfirmUploadResponse.variants:type_name -> media.MediaVariant
	1,  // 5: media.HealthCheckResponse.status:type_name -> media.HealthCheckResponse.Status
	10, // 6: media.MediaService.GetPresignedUploadURL:input_type -> media.GetPresignedUploadURLRequest
	12, // 7: media.MediaService.ConfirmUpload:input_type -> media.ConfirmUploadRequest
	4,  // 8: media.MediaService.GetMedia:input_type -> media.GetMediaRequest
	6,  // 9: media.MediaService.GetMediaURL:input_type -> media.GetMediaURLRequest
	8,  // 10: media.MediaService.OptimizeImage:input_type -> media.OptimizeImageRequest
	14, // 11: media.MediaService.HealthCheck:input_type -> media.HealthCheckRequest
	11, // 12: media.MediaService.GetPresignedUploadURL:output_type -> media.GetPresignedUploadURLResponse
	13, // 13: media.MediaService.ConfirmUpload:output_type -> media.ConfirmUploadResponse
	5,  // 14: media.MediaService.GetMedia:output_type -> media.Media
	7,  // 15: media.MediaService.GetMediaURL:output_type -> media.GetMediaURLResponse
	9,  // 16: media.MediaService.OptimizeImage:output_type -> media.OptimizeImageResponse
	15, // 17: media.MediaService.HealthCheck:output_type -> media.HealthCheckResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_media_media_proto_init() }
func file_media_media_proto_init() {
	if File_media_media_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_media_media_proto_rawDesc), len(file_media_media_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_media_media_proto_goTypes,
		DependencyIndexes: file_media_media_proto_depIdxs,
		EnumInfos:         file_media_media_proto_enumTypes,
		MessageInfos:      file_media_media_proto_msgTypes,
	}.Build()
	File_media_media_proto = out.File
	file_media_media_proto_goTypes = nil
	file_media_media_proto_depIdxs = nil
}
