// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: cdn/cdn.proto

package cdn

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HealthCheckResponse_Status int32

const (
	HealthCheckResponse_UNKNOWN     HealthCheckResponse_Status = 0
	HealthCheckResponse_SERVING     HealthCheckResponse_Status = 1
	HealthCheckResponse_NOT_SERVING HealthCheckResponse_Status = 2
)

// Enum value maps for HealthCheckResponse_Status.
var (
	HealthCheckResponse_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "SERVING",
		2: "NOT_SERVING",
	}
	HealthCheckResponse_Status_value = map[string]int32{
		"UNKNOWN":     0,
		"SERVING":     1,
		"NOT_SERVING": 2,
	}
)

func (x HealthCheckResponse_Status) Enum() *HealthCheckResponse_Status {
	p := new(HealthCheckResponse_Status)
	*p = x
	return p
}

func (x HealthCheckResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthCheckResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_cdn_cdn_proto_enumTypes[0].Descriptor()
}

func (HealthCheckResponse_Status) Type() protoreflect.EnumType {
	return &file_cdn_cdn_proto_enumTypes[0]
}

func (x HealthCheckResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthCheckResponse_Status.Descriptor instead.
func (HealthCheckResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_cdn_cdn_proto_rawDescGZIP(), []int{7, 0}
}

type GetSignedURLRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`                             // Путь к файлу
	ExpiresIn     int32                  `protobuf:"varint,2,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"` // Время жизни URL в секундах
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSignedURLRequest) Reset() {
	*x = GetSignedURLRequest{}
	mi := &file_cdn_cdn_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSignedURLRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignedURLRequest) ProtoMessage() {}

func (x *GetSignedURLRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cdn_cdn_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignedURLRequest.ProtoReflect.Descriptor instead.
func (*GetSignedURLRequest) Descriptor() ([]byte, []int) {
	return file_cdn_cdn_proto_rawDescGZIP(), []int{0}
}

func (x *GetSignedURLRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *GetSignedURLRequest) GetExpiresIn() int32 {
	if x != nil {
		return x.ExpiresIn
	}
	return 0
}

type GetSignedURLResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,2,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSignedURLResponse) Reset() {
	*x = GetSignedURLResponse{}
	mi := &file_cdn_cdn_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSignedURLResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSignedURLResponse) ProtoMessage() {}

func (x *GetSignedURLResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cdn_cdn_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSignedURLResponse.ProtoReflect.Descriptor instead.
func (*GetSignedURLResponse) Descriptor() ([]byte, []int) {
	return file_cdn_cdn_proto_rawDescGZIP(), []int{1}
}

func (x *GetSignedURLResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *GetSignedURLResponse) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type InvalidateCacheRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Paths         []string               `protobuf:"bytes,1,rep,name=paths,proto3" json:"paths,omitempty"` // Пути к файлам для инвалидации
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvalidateCacheRequest) Reset() {
	*x = InvalidateCacheRequest{}
	mi := &file_cdn_cdn_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidateCacheRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidateCacheRequest) ProtoMessage() {}

func (x *InvalidateCacheRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cdn_cdn_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidateCacheRequest.ProtoReflect.Descriptor instead.
func (*InvalidateCacheRequest) Descriptor() ([]byte, []int) {
	return file_cdn_cdn_proto_rawDescGZIP(), []int{2}
}

func (x *InvalidateCacheRequest) GetPaths() []string {
	if x != nil {
		return x.Paths
	}
	return nil
}

type InvalidateCacheResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	OperationId   string                 `protobuf:"bytes,2,opt,name=operation_id,json=operationId,proto3" json:"operation_id,omitempty"` // ID операции инвалидации
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InvalidateCacheResponse) Reset() {
	*x = InvalidateCacheResponse{}
	mi := &file_cdn_cdn_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InvalidateCacheResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvalidateCacheResponse) ProtoMessage() {}

func (x *InvalidateCacheResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cdn_cdn_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvalidateCacheResponse.ProtoReflect.Descriptor instead.
func (*InvalidateCacheResponse) Descriptor() ([]byte, []int) {
	return file_cdn_cdn_proto_rawDescGZIP(), []int{3}
}

func (x *InvalidateCacheResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InvalidateCacheResponse) GetOperationId() string {
	if x != nil {
		return x.OperationId
	}
	return ""
}

type GetCDNConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCDNConfigRequest) Reset() {
	*x = GetCDNConfigRequest{}
	mi := &file_cdn_cdn_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCDNConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDNConfigRequest) ProtoMessage() {}

func (x *GetCDNConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cdn_cdn_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDNConfigRequest.ProtoReflect.Descriptor instead.
func (*GetCDNConfigRequest) Descriptor() ([]byte, []int) {
	return file_cdn_cdn_proto_rawDescGZIP(), []int{4}
}

type GetCDNConfigResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	CdnDomain          string                 `protobuf:"bytes,1,opt,name=cdn_domain,json=cdnDomain,proto3" json:"cdn_domain,omitempty"`
	DefaultTtl         int32                  `protobuf:"varint,2,opt,name=default_ttl,json=defaultTtl,proto3" json:"default_ttl,omitempty"`
	AllowedOrigins     []string               `protobuf:"bytes,3,rep,name=allowed_origins,json=allowedOrigins,proto3" json:"allowed_origins,omitempty"`
	AllowedHttpMethods []string               `protobuf:"bytes,4,rep,name=allowed_http_methods,json=allowedHttpMethods,proto3" json:"allowed_http_methods,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *GetCDNConfigResponse) Reset() {
	*x = GetCDNConfigResponse{}
	mi := &file_cdn_cdn_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCDNConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCDNConfigResponse) ProtoMessage() {}

func (x *GetCDNConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cdn_cdn_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCDNConfigResponse.ProtoReflect.Descriptor instead.
func (*GetCDNConfigResponse) Descriptor() ([]byte, []int) {
	return file_cdn_cdn_proto_rawDescGZIP(), []int{5}
}

func (x *GetCDNConfigResponse) GetCdnDomain() string {
	if x != nil {
		return x.CdnDomain
	}
	return ""
}

func (x *GetCDNConfigResponse) GetDefaultTtl() int32 {
	if x != nil {
		return x.DefaultTtl
	}
	return 0
}

func (x *GetCDNConfigResponse) GetAllowedOrigins() []string {
	if x != nil {
		return x.AllowedOrigins
	}
	return nil
}

func (x *GetCDNConfigResponse) GetAllowedHttpMethods() []string {
	if x != nil {
		return x.AllowedHttpMethods
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_cdn_cdn_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cdn_cdn_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_cdn_cdn_proto_rawDescGZIP(), []int{6}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Status        HealthCheckResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=cdn.HealthCheckResponse_Status" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_cdn_cdn_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cdn_cdn_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_cdn_cdn_proto_rawDescGZIP(), []int{7}
}

func (x *HealthCheckResponse) GetStatus() HealthCheckResponse_Status {
	if x != nil {
		return x.Status
	}
	return HealthCheckResponse_UNKNOWN
}

var File_cdn_cdn_proto protoreflect.FileDescriptor

const file_cdn_cdn_proto_rawDesc = "" +
	"\n" +
	"\rcdn/cdn.proto\x12\x03cdn\"H\n" +
	"\x13GetSignedURLRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\x12\x1d\n" +
	"\n" +
	"expires_in\x18\x02 \x01(\x05R\texpiresIn\"G\n" +
	"\x14GetSignedURLResponse\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x02 \x01(\x03R\texpiresAt\".\n" +
	"\x16InvalidateCacheRequest\x12\x14\n" +
	"\x05paths\x18\x01 \x03(\tR\x05paths\"V\n" +
	"\x17InvalidateCacheResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12!\n" +
	"\foperation_id\x18\x02 \x01(\tR\voperationId\"\x15\n" +
	"\x13GetCDNConfigRequest\"\xb1\x01\n" +
	"\x14GetCDNConfigResponse\x12\x1d\n" +
	"\n" +
	"cdn_domain\x18\x01 \x01(\tR\tcdnDomain\x12\x1f\n" +
	"\vdefault_ttl\x18\x02 \x01(\x05R\n" +
	"defaultTtl\x12'\n" +
	"\x0fallowed_origins\x18\x03 \x03(\tR\x0eallowedOrigins\x120\n" +
	"\x14allowed_http_methods\x18\x04 \x03(\tR\x12allowedHttpMethods\"\x14\n" +
	"\x12HealthCheckRequest\"\x83\x01\n" +
	"\x13HealthCheckResponse\x127\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1f.cdn.HealthCheckResponse.StatusR\x06status\"3\n" +
	"\x06Status\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aSERVING\x10\x01\x12\x0f\n" +
	"\vNOT_SERVING\x10\x022\xa6\x02\n" +
	"\n" +
	"CDNService\x12C\n" +
	"\fGetSignedURL\x12\x18.cdn.GetSignedURLRequest\x1a\x19.cdn.GetSignedURLResponse\x12L\n" +
	"\x0fInvalidateCache\x12\x1b.cdn.InvalidateCacheRequest\x1a\x1c.cdn.InvalidateCacheResponse\x12C\n" +
	"\fGetCDNConfig\x12\x18.cdn.GetCDNConfigRequest\x1a\x19.cdn.GetCDNConfigResponse\x12@\n" +
	"\vHealthCheck\x12\x17.cdn.HealthCheckRequest\x1a\x18.cdn.HealthCheckResponseB+Z)github.com/sdshorin/generia/api/proto/cdnb\x06proto3"

var (
	file_cdn_cdn_proto_rawDescOnce sync.Once
	file_cdn_cdn_proto_rawDescData []byte
)

func file_cdn_cdn_proto_rawDescGZIP() []byte {
	file_cdn_cdn_proto_rawDescOnce.Do(func() {
		file_cdn_cdn_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_cdn_cdn_proto_rawDesc), len(file_cdn_cdn_proto_rawDesc)))
	})
	return file_cdn_cdn_proto_rawDescData
}

var file_cdn_cdn_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cdn_cdn_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_cdn_cdn_proto_goTypes = []any{
	(HealthCheckResponse_Status)(0), // 0: cdn.HealthCheckResponse.Status
	(*GetSignedURLRequest)(nil),     // 1: cdn.GetSignedURLRequest
	(*GetSignedURLResponse)(nil),    // 2: cdn.GetSignedURLResponse
	(*InvalidateCacheRequest)(nil),  // 3: cdn.InvalidateCacheRequest
	(*InvalidateCacheResponse)(nil), // 4: cdn.InvalidateCacheResponse
	(*GetCDNConfigRequest)(nil),     // 5: cdn.GetCDNConfigRequest
	(*GetCDNConfigResponse)(nil),    // 6: cdn.GetCDNConfigResponse
	(*HealthCheckRequest)(nil),      // 7: cdn.HealthCheckRequest
	(*HealthCheckResponse)(nil),     // 8: cdn.HealthCheckResponse
}
var file_cdn_cdn_proto_depIdxs = []int32{
	0, // 0: cdn.HealthCheckResponse.status:type_name -> cdn.HealthCheckResponse.Status
	1, // 1: cdn.CDNService.GetSignedURL:input_type -> cdn.GetSignedURLRequest
	3, // 2: cdn.CDNService.InvalidateCache:input_type -> cdn.InvalidateCacheRequest
	5, // 3: cdn.CDNService.GetCDNConfig:input_type -> cdn.GetCDNConfigRequest
	7, // 4: cdn.CDNService.HealthCheck:input_type -> cdn.HealthCheckRequest
	2, // 5: cdn.CDNService.GetSignedURL:output_type -> cdn.GetSignedURLResponse
	4, // 6: cdn.CDNService.InvalidateCache:output_type -> cdn.InvalidateCacheResponse
	6, // 7: cdn.CDNService.GetCDNConfig:output_type -> cdn.GetCDNConfigResponse
	8, // 8: cdn.CDNService.HealthCheck:output_type -> cdn.HealthCheckResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_cdn_cdn_proto_init() }
func file_cdn_cdn_proto_init() {
	if File_cdn_cdn_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_cdn_cdn_proto_rawDesc), len(file_cdn_cdn_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cdn_cdn_proto_goTypes,
		DependencyIndexes: file_cdn_cdn_proto_depIdxs,
		EnumInfos:         file_cdn_cdn_proto_enumTypes,
		MessageInfos:      file_cdn_cdn_proto_msgTypes,
	}.Build()
	File_cdn_cdn_proto = out.File
	file_cdn_cdn_proto_goTypes = nil
	file_cdn_cdn_proto_depIdxs = nil
}
