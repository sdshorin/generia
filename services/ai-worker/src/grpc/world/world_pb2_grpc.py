# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from world import world_pb2 as world_dot_world__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in world/world_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class WorldServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateWorld = channel.unary_unary(
                '/world.WorldService/CreateWorld',
                request_serializer=world_dot_world__pb2.CreateWorldRequest.SerializeToString,
                response_deserializer=world_dot_world__pb2.WorldResponse.FromString,
                _registered_method=True)
        self.GetWorld = channel.unary_unary(
                '/world.WorldService/GetWorld',
                request_serializer=world_dot_world__pb2.GetWorldRequest.SerializeToString,
                response_deserializer=world_dot_world__pb2.WorldResponse.FromString,
                _registered_method=True)
        self.GetWorlds = channel.unary_unary(
                '/world.WorldService/GetWorlds',
                request_serializer=world_dot_world__pb2.GetWorldsRequest.SerializeToString,
                response_deserializer=world_dot_world__pb2.WorldsResponse.FromString,
                _registered_method=True)
        self.JoinWorld = channel.unary_unary(
                '/world.WorldService/JoinWorld',
                request_serializer=world_dot_world__pb2.JoinWorldRequest.SerializeToString,
                response_deserializer=world_dot_world__pb2.JoinWorldResponse.FromString,
                _registered_method=True)
        self.UpdateWorldImage = channel.unary_unary(
                '/world.WorldService/UpdateWorldImage',
                request_serializer=world_dot_world__pb2.UpdateWorldImageRequest.SerializeToString,
                response_deserializer=world_dot_world__pb2.UpdateWorldImageResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/world.WorldService/HealthCheck',
                request_serializer=world_dot_world__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=world_dot_world__pb2.HealthCheckResponse.FromString,
                _registered_method=True)


class WorldServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateWorld(self, request, context):
        """Create a new world
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorld(self, request, context):
        """Get world by ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetWorlds(self, request, context):
        """Get all worlds available to the user
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JoinWorld(self, request, context):
        """Join a world (add to user's available worlds)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateWorldImage(self, request, context):
        """Update world image
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Health check
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_WorldServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateWorld': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateWorld,
                    request_deserializer=world_dot_world__pb2.CreateWorldRequest.FromString,
                    response_serializer=world_dot_world__pb2.WorldResponse.SerializeToString,
            ),
            'GetWorld': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorld,
                    request_deserializer=world_dot_world__pb2.GetWorldRequest.FromString,
                    response_serializer=world_dot_world__pb2.WorldResponse.SerializeToString,
            ),
            'GetWorlds': grpc.unary_unary_rpc_method_handler(
                    servicer.GetWorlds,
                    request_deserializer=world_dot_world__pb2.GetWorldsRequest.FromString,
                    response_serializer=world_dot_world__pb2.WorldsResponse.SerializeToString,
            ),
            'JoinWorld': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinWorld,
                    request_deserializer=world_dot_world__pb2.JoinWorldRequest.FromString,
                    response_serializer=world_dot_world__pb2.JoinWorldResponse.SerializeToString,
            ),
            'UpdateWorldImage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateWorldImage,
                    request_deserializer=world_dot_world__pb2.UpdateWorldImageRequest.FromString,
                    response_serializer=world_dot_world__pb2.UpdateWorldImageResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=world_dot_world__pb2.HealthCheckRequest.FromString,
                    response_serializer=world_dot_world__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'world.WorldService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('world.WorldService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class WorldService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateWorld(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.WorldService/CreateWorld',
            world_dot_world__pb2.CreateWorldRequest.SerializeToString,
            world_dot_world__pb2.WorldResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorld(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.WorldService/GetWorld',
            world_dot_world__pb2.GetWorldRequest.SerializeToString,
            world_dot_world__pb2.WorldResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetWorlds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.WorldService/GetWorlds',
            world_dot_world__pb2.GetWorldsRequest.SerializeToString,
            world_dot_world__pb2.WorldsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def JoinWorld(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.WorldService/JoinWorld',
            world_dot_world__pb2.JoinWorldRequest.SerializeToString,
            world_dot_world__pb2.JoinWorldResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateWorldImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.WorldService/UpdateWorldImage',
            world_dot_world__pb2.UpdateWorldImageRequest.SerializeToString,
            world_dot_world__pb2.UpdateWorldImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/world.WorldService/HealthCheck',
            world_dot_world__pb2.HealthCheckRequest.SerializeToString,
            world_dot_world__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
